---
title: "Point count formatting for BIOL314"
format: pdf
editor: visual
knitr:
  opts_chunk: 
    root.dir: "/Users/aaronskinner/Library/CloudStorage/OneDrive-UBC/Grad_School/PhD/TA_LDP/BIOL314/Biol314_Spring2025_Repo/"
    comment: "#>"
    collapse: true
editor_options: 
  chunk_output_type: console
---

{{< pagebreak >}}

::: {style="font-size: 200%;"}
**Goal:**
:::

Data wrangling to get bird point count data into a format suitable for BIOL314, where we will do community biodiversity analyses.

# Load libraries

```{r}
#| label: Libraries
#| message: false
library(vegan) 
library(tidyverse)
library(janitor)
library(xlsx)
library(ggpubr)
library(cowplot)
library(conflicted)
ggplot2::theme_set(cowplot::theme_cowplot())
conflicts_prefer(dplyr::filter)
```

I am modeling my data formatting off of the stock datasets in vegan

```{r}
#| label: Vegan-datasets
data(BCI) 
data(BCI.env) 
dim(BCI) # 50 plots, 225 species 
dim(BCI.env) # 50 sites, 9 covs

data(mite) 
dim(mite) #70 sites, 35 species
```

# Create reduced set of point counts for Biol 314 class

## Site covariates

I am starting with the site covariates as I'm pulling point counts within a single Ecoregion, by certain data collectors, and that have habitat covariate information available

While not best practice, I'm uploading outputs from Rdata files that were created in another R project.

```{r}
#| label: upload-Rdata
load("Rdata/Biol314_inputs_02.26.25.Rdata")
```

NOTE:: I've included the data collector CIPAV at present, but they followed a different methodology so it could make sense to remove them. I'd be interested in keeping them in though if possible!

```{r}
#| label: subset-ids
ids <- Pc_hab %>% filter(
  Ecoregion == "Piedemonte" & Uniq_db %in% c("Ubc mbd", "Cipav mbd", "Gaica mbd", "Gaica distancia")
  ) %>% 
  distinct(Id_muestreo, Habitat_cons) %>% # Habitat_cons = habitat consolidated 
  filter(!is.na(Habitat_cons)) %>% 
  arrange(Id_muestreo) %>%
  pull(Id_muestreo) 
length(ids)
ids[1:6]
```

We have `r length(ids)` point counts that we'll include in the dataset.\
\
Site covariates -- 1 row per point count

```{r}
#| label: site-covs
Site_covs314 <- Site_covs_df %>% filter(Id_muestreo %in% ids) %>% 
  arrange(Id_muestreo) %>% 
  select(-Ano1) %>% # There are multiple years for some point counts, so remove 
  distinct()
```

## Bird point count data

**Methodology:** 10 minute 50m radius point counts\
**Data sets included:** Ubc, CIPAV, Gaica MBD, and Gaica distancia for now

### Change to Bird Tree

Species names are currently from Ayerbe (2018), but given that we will match up with a Bird Tree phylogeny it is better to use Bird tree taxonomy

```{r}
#| label: Bird-tree-taxonomy

Spp_join_bt <- Tax_df3 %>% as_tibble() %>%
  distinct(Species_ayerbe, Species_bt, order_gbif, family_gbif) 
Bt_equivalents <- Birds_analysis %>% distinct(Nombre_ayerbe) %>% 
  left_join(Spp_join_bt, 
            by = join_by("Nombre_ayerbe" == "Species_ayerbe")) %>%
  reframe(Species_bt = first(Species_bt),
          .by = Nombre_ayerbe)

Birds_analysis_bt <- Birds_analysis %>% left_join(Bt_equivalents) %>% 
  select(-Nombre_ayerbe)
```

### Pivot data wider

This code 1) takes the mean count value for each site X species, 2) sets abundance to 1 if species was observed at all (although apparently there are no species with Count_mn \< 1), & 3) rounds abundance to nearest whole number

```{r}
#| label: Mean-counts-pivot

# Define function for formatting col names
Cap_snake <- function(df){
  df <- df %>% clean_names(case = "snake")
  names(df) <- str_to_sentence(names(df))
  return(tibble(df))
}

Birds_wide <- Birds_analysis_bt %>% filter(Id_muestreo %in% ids) %>% 
  distinct(Uniq_db, Id_muestreo, Species_bt, Count) %>% 
  reframe(Count_mn = mean(Count, na.rm = TRUE),
          .by = c(Id_muestreo, Species_bt)) %>% 
  mutate(Count_mn = ifelse(Count_mn > 0 & Count_mn < 1, 1, Count_mn),
         Count_mn = round(Count_mn, digits = 0)) %>%
  pivot_wider(id_cols = Id_muestreo, names_from = Species_bt, 
              values_from = Count_mn, values_fill = 0) %>% 
  Cap_snake() # Custom function

dim(Birds_wide)
```

`r nrow(Birds_wide)` sites and `r ncol(Birds_wide)` species. Notice this is 2 fewer rows than in the `Site_covs314` data frame. There were no birds observed at 2 point count locations, but these 0s are valuable data. We need to add them back in and replace the NAs with 0s

```{r}
#| Label: Add-sites
Meta314 <- Birds_wide %>% right_join(Site_covs314[c("Id_muestreo")]) %>%
  mutate(across(everything(), ~ replace_na(., 0)))
dim(Meta314) #Better!
```

### Summarize point count data

Summary table

```{r}
#| label: Summary
summary_meta <- Meta314 %>% rowwise(Id_muestreo) %>% # Preserve Id_muestreo
  mutate(Original_values = list(c_across(everything())), # Cache original numeric values
          Spp_obs = sum(Original_values > 0), 
          Max_count = max(Original_values), 
          N_zeros = sum(Original_values == 0), 
          Tot_ind = sum(Original_values) ) %>% 
  distinct(Id_muestreo, Spp_obs, Max_count, N_zeros, Tot_ind) %>% 
  arrange(desc(Spp_obs)) %>% 
  ungroup() 
summary_meta
```

### Summary plots

Distribution of summary values (each row is a point count)

```{r}
#| label: Density-plots
names <- c("Species observed", "Max count", "Number of zeros", "Total individuals")
density_plots <- map2(.x = select(summary_meta, -Id_muestreo), .y = names, \(col, name){ 
  ggplot(data = summary_meta, aes(x = col)) + 
    geom_density() + 
    labs(title = name, x = NULL) }) 
ggpubr::ggarrange(density_plots[[1]], density_plots[[2]], 
                  density_plots[[3]], density_plots[[4]])
```

### Transpose

Transpose so species are rows if desired

```{r}
#| label: Transpose
Meta314_t <- Meta314 %>%
  pivot_longer(-Id_muestreo, names_to = "Species", values_to = "Count") %>%
  pivot_wider(names_from = Id_muestreo, values_from = Count)
```

## Export Excel files

```{r}
#| Label: Export-excel
# Export bird abundance data

Meta314 %>% arrange(Id_muestreo) %>% 
  as.data.frame() %>% 
  write.xlsx("Derived/Meta_314.xlsx", row.names = F)

# Export site covs
Site_covs314 %>% as.data.frame() %>% 
  write.xlsx("Derived/Site_covs314.xlsx", row.names = F)
```

:::
